-- MySQL Script generated by MySQL Workbench
-- 02/15/15 21:04:39
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema byteland
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `byteland` ;
CREATE SCHEMA IF NOT EXISTS `byteland` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `byteland` ;

-- -----------------------------------------------------
-- Table `byteland`.`restaurant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `byteland`.`restaurant` ;

CREATE TABLE IF NOT EXISTS `byteland`.`restaurant` (
  `restaurant_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `capacity` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`restaurant_id`),
  UNIQUE INDEX `Name_UNQ` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `byteland`.`client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `byteland`.`client` ;

CREATE TABLE IF NOT EXISTS `byteland`.`client` (
  `client_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`client_id`),
  UNIQUE INDEX `Name_UNQ` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `byteland`.`reserve_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `byteland`.`reserve_list` ;

CREATE TABLE IF NOT EXISTS `byteland`.`reserve_list` (
  `reserve_list_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  PRIMARY KEY (`reserve_list_id`),
  UNIQUE INDEX `date_UNIQUE` (`date` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `byteland`.`available_restaurant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `byteland`.`available_restaurant` ;

CREATE TABLE IF NOT EXISTS `byteland`.`available_restaurant` (
  `available_restaurant_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `reserve_list_id` BIGINT UNSIGNED NOT NULL,
  `restaurant_id` BIGINT UNSIGNED NOT NULL,
  UNIQUE INDEX `Day_Restaurant_UNQ` (`reserve_list_id` ASC, `restaurant_id` ASC),
  INDEX `Restaurant_FK_IDX` (`restaurant_id` ASC),
  PRIMARY KEY (`available_restaurant_id`),
  CONSTRAINT `RD_Restaurant_FK0`
    FOREIGN KEY (`restaurant_id`)
    REFERENCES `byteland`.`restaurant` (`restaurant_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `RD_ReservationDay_FK0`
    FOREIGN KEY (`reserve_list_id`)
    REFERENCES `byteland`.`reserve_list` (`reserve_list_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `byteland`.`reserve`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `byteland`.`reserve` ;

CREATE TABLE IF NOT EXISTS `byteland`.`reserve` (
  `reserve_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `available_restaurant_id` BIGINT UNSIGNED NOT NULL,
  `client_id` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`reserve_id`),
  UNIQUE INDEX `RLR_Client_UNIQUE` (`available_restaurant_id` ASC, `client_id` ASC),
  INDEX `RLRC_Client_idx` (`client_id` ASC),
  CONSTRAINT `RLRC_Client_FK`
    FOREIGN KEY (`client_id`)
    REFERENCES `byteland`.`client` (`client_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `RLRC_ReserveListRestaurant_FK`
    FOREIGN KEY (`available_restaurant_id`)
    REFERENCES `byteland`.`available_restaurant` (`available_restaurant_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `byteland`.`restaurant`
-- -----------------------------------------------------
START TRANSACTION;
USE `byteland`;
INSERT INTO `byteland`.`restaurant` (`restaurant_id`, `name`, `capacity`) VALUES (1, 'Akelarre', 350);
INSERT INTO `byteland`.`restaurant` (`restaurant_id`, `name`, `capacity`) VALUES (2, 'El Kiosko', 23);
INSERT INTO `byteland`.`restaurant` (`restaurant_id`, `name`, `capacity`) VALUES (3, 'El Bulli', 44);

COMMIT;


-- -----------------------------------------------------
-- Data for table `byteland`.`client`
-- -----------------------------------------------------
START TRANSACTION;
USE `byteland`;
INSERT INTO `byteland`.`client` (`client_id`, `name`) VALUES (1, 'John Red');
INSERT INTO `byteland`.`client` (`client_id`, `name`) VALUES (2, 'Jane Foo');
INSERT INTO `byteland`.`client` (`client_id`, `name`) VALUES (3, 'Doe Johnson');
INSERT INTO `byteland`.`client` (`client_id`, `name`) VALUES (4, 'Max Mad');

COMMIT;


-- -----------------------------------------------------
-- Data for table `byteland`.`reserve_list`
-- -----------------------------------------------------
START TRANSACTION;
USE `byteland`;
INSERT INTO `byteland`.`reserve_list` (`reserve_list_id`, `date`) VALUES (1, '2015-02-13');
INSERT INTO `byteland`.`reserve_list` (`reserve_list_id`, `date`) VALUES (2, '2015-02-14');
INSERT INTO `byteland`.`reserve_list` (`reserve_list_id`, `date`) VALUES (3, '2015-02-15');

COMMIT;


-- -----------------------------------------------------
-- Data for table `byteland`.`available_restaurant`
-- -----------------------------------------------------
START TRANSACTION;
USE `byteland`;
INSERT INTO `byteland`.`available_restaurant` (`available_restaurant_id`, `reserve_list_id`, `restaurant_id`) VALUES (1, 1, 1);
INSERT INTO `byteland`.`available_restaurant` (`available_restaurant_id`, `reserve_list_id`, `restaurant_id`) VALUES (2, 2, 2);
INSERT INTO `byteland`.`available_restaurant` (`available_restaurant_id`, `reserve_list_id`, `restaurant_id`) VALUES (3, 1, 2);
INSERT INTO `byteland`.`available_restaurant` (`available_restaurant_id`, `reserve_list_id`, `restaurant_id`) VALUES (4, 2, 3);
INSERT INTO `byteland`.`available_restaurant` (`available_restaurant_id`, `reserve_list_id`, `restaurant_id`) VALUES (5, 3, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `byteland`.`reserve`
-- -----------------------------------------------------
START TRANSACTION;
USE `byteland`;
INSERT INTO `byteland`.`reserve` (`reserve_id`, `available_restaurant_id`, `client_id`) VALUES (1, 1, 1);
INSERT INTO `byteland`.`reserve` (`reserve_id`, `available_restaurant_id`, `client_id`) VALUES (2, 2, 1);
INSERT INTO `byteland`.`reserve` (`reserve_id`, `available_restaurant_id`, `client_id`) VALUES (3, 2, 2);

COMMIT;

