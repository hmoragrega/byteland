{
    "swagger": "2.0",
    "info": {
        "description": "Make clients happy with Byteland API",
        "version": "1.0.0",
        "title": "Byteland API",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "email": "hilari@hilari.moragrega.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "127.0.0.1:8890",
    "basePath": "/api/v1",
    "schemes": [
        "http"
    ],
    "paths": {
        "/restaurants": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Gets all restaurants",
                "description": "Manage restaurant resources",
                "operationId": "getRestaurants",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the restaurant",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "capacity",
                        "in": "query",
                        "description": "Capacity of the restaurant",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Restaurant"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Creates a restaurant",
                "description": "",
                "operationId": "createRestaurant",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the restaurant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "capacity",
                        "in": "formData",
                        "description": "Capacity of the restaurant. Must be greater then 0",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid restaurant attributes"
                    },
                    "403": {
                        "description": "Restaurant already exists"
                    },
                    "201": {
                        "description": "Restaurant created correctly",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    }
                }
            }
        },
        "/restaurants/{id}": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Find a restaurant",
                "description": "",
                "operationId": "getRestaurantById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of restaurant that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Restaurant not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Updates a restaurant",
                "description": "",
                "operationId": "updateRestaurant",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of restaurant that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the restaurant",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "capacity",
                        "in": "formData",
                        "description": "Capacity of the restaurant. Must be greater then 0",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid restaurant attributes"
                    },
                    "404": {
                        "description": "Restaurant not found"
                    },
                    "200": {
                        "description": "Restaurant updated correctly",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Deletes a restaurant",
                "description": "",
                "operationId": "deleteRestaurant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Restaurant id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid pet value"
                    }
                }
            }
        }
    },
    "definitions": {
        "Restaurant": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer",
                    "format": "int32"
                },
                "update_date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}