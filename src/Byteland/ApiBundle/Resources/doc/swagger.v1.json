{
    "swagger": "2.0",
    "info": {
        "description": "Make clients happy with Byteland API",
        "version": "1.0.0",
        "title": "Byteland API",
        "contact": {
            "email": "hilari@hilari.moragrega.com"
        }
    },
    "host": "127.0.0.1:8890",
    "basePath": "/api/v1",
    "schemes": [
        "http"
    ],
    "paths": {
        "/restaurants": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Gets all restaurants",
                "description": "Manage restaurant resources",
                "operationId": "getRestaurants",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the restaurant",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "capacity",
                        "in": "query",
                        "description": "Capacity of the restaurant",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Restaurant"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid search criteria"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Creates a restaurant",
                "description": "",
                "operationId": "createRestaurant",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the restaurant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "capacity",
                        "in": "formData",
                        "description": "Capacity of the restaurant. Must be greater then 0",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid restaurant attributes"
                    },
                    "403": {
                        "description": "Restaurant already exists"
                    },
                    "201": {
                        "description": "Restaurant created correctly",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    }
                }
            }
        },
        "/restaurants/{id}": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Find a restaurant",
                "description": "",
                "operationId": "getRestaurantById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of restaurant that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Restaurant not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Updates a restaurant",
                "description": "",
                "operationId": "updateRestaurant",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of restaurant that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the restaurant",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "capacity",
                        "in": "formData",
                        "description": "Capacity of the restaurant. Must be greater then 0",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid restaurant data"
                    },
                    "403": {
                        "description": "Restaurant already exists"
                    },
                    "404": {
                        "description": "Restaurant not found"
                    },
                    "200": {
                        "description": "Restaurant updated correctly",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Deletes a restaurant",
                "description": "",
                "operationId": "deleteRestaurant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Restaurant id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted restaurant"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },

        "/clients": {
            "get": {
                "tags": [
                    "client"
                ],
                "summary": "Gets all clients",
                "description": "Manage client resources",
                "operationId": "getClients",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the client",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Client"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid search criteria"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "summary": "Creates a client",
                "description": "",
                "operationId": "createClient",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the client",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid client attributes"
                    },
                    "403": {
                        "description": "Client already exists"
                    },
                    "201": {
                        "description": "Client created correctly",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                }
            }
        },
        "/clients/{id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "summary": "Find a client",
                "description": "",
                "operationId": "getClientById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "client"
                ],
                "summary": "Updates a client",
                "description": "",
                "operationId": "updateClient",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the client",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid client data"
                    },
                    "403": {
                        "description": "Client already exists"
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "200": {
                        "description": "Client updated correctly",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "summary": "Deletes a client",
                "description": "",
                "operationId": "deleteClient",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted client"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },

        "/available_restaurants": {
            "get": {
                "tags": [
                    "available_restaurant"
                ],
                "summary": "Gets all available restaurants",
                "description": "Manage available restaurant resources",
                "operationId": "getAvailableRestaurants",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "restaurant",
                        "in": "query",
                        "description": "The ID of the restaurant to search for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "reserveList",
                        "in": "query",
                        "description": "the ID of the reserve list to search for",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Restaurant"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid search criteria"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "available_restaurant"
                ],
                "summary": "Creates a available restaurant for a day",
                "description": "",
                "operationId": "createRestaurant",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "restaurant",
                        "in": "formData",
                        "description": "The ID of the restaurant that needs to be added to the list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reserveList",
                        "in": "formData",
                        "description": "The reserve list ID which contains the date",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid available_restaurant attributes"
                    },
                    "403": {
                        "description": "Restaurant already exists"
                    },
                    "201": {
                        "description": "Restaurant created correctly",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    }
                }
            }
        },
        "/available_restaurants/{id}": {
            "get": {
                "tags": [
                    "available_restaurant"
                ],
                "summary": "Find an available restaurant",
                "description": "",
                "operationId": "getAvailableRestaurantById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of available restaurant that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Available Restaurant not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "available_restaurant"
                ],
                "summary": "Updates a available restaurant",
                "description": "",
                "operationId": "updateAvailableRestaurant",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of available restaurant that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "restaurant",
                        "in": "formData",
                        "description": "The new restaurant ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "reserveList",
                        "in": "formData",
                        "description": "The new reserve list ID",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid available restaurant data"
                    },
                    "403": {
                        "description": "Available restaurant already exists"
                    },
                    "404": {
                        "description": "Available restaurant not found"
                    },
                    "200": {
                        "description": "Available restaurant updated correctly",
                        "schema": {
                            "$ref": "#/definitions/AvailableRestaurant"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "available_restaurant"
                ],
                "summary": "Deletes a available restaurant",
                "description": "",
                "operationId": "deleteAvailableRestaurant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Available restaurant id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted available restaurant"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },

        "/reserve_lists": {
            "get": {
                "tags": [
                    "reserve_lists"
                ],
                "summary": "Gets all reserve lists",
                "description": "Manage reserve list resources",
                "operationId": "getReserveListss",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date of the reserve with format YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReserveList"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid search criteria"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "reserve_lists"
                ],
                "summary": "Creates a reserve lists",
                "description": "",
                "operationId": "createReserveLists",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "date",
                        "in": "formData",
                        "description": "Name of the reserve list, with format YYYY-MM-DD",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid reserve list attributes"
                    },
                    "403": {
                        "description": "The reserve lists already exists"
                    },
                    "201": {
                        "description": "Reserve list created correctly",
                        "schema": {
                            "$ref": "#/definitions/ReserveList"
                        }
                    }
                }
            }
        },
        "/reserve_lists/{id}": {
            "get": {
                "tags": [
                    "reserve_lists"
                ],
                "summary": "Find a reserve list by the id",
                "description": "",
                "operationId": "getReserveListsById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of reserve list that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReserveList"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Reserve list not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "reserve_lists"
                ],
                "summary": "Updates a reserve list",
                "description": "",
                "operationId": "updateReserveLists",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of reserve lists that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "formData",
                        "description": "New date of the reserve list, with format YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid reserve list data"
                    },
                    "403": {
                        "description": "Reserve list already exists"
                    },
                    "404": {
                        "description": "Reserve list not found"
                    },
                    "200": {
                        "description": "Reserve list updated correctly",
                        "schema": {
                            "$ref": "#/definitions/ReserveList"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "reserve_lists"
                ],
                "summary": "Deletes a reserve list",
                "description": "",
                "operationId": "deleteReserveLists",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the reserve list to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Reserve list deleted"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },

        "/reserves": {
            "get": {
                "tags": [
                    "reserves"
                ],
                "summary": "Gets all reserves",
                "description": "Manage reserve resources",
                "operationId": "getReserves",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "client",
                        "in": "query",
                        "description": "ID of the client that made a reserve",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "availableRestaurant",
                        "in": "query",
                        "description": "ID of the available restaurant",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reserve"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid search criteria"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "reserves"
                ],
                "summary": "Creates a reserve",
                "description": "",
                "operationId": "createReserves",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "client",
                        "in": "formData",
                        "description": "Id of the client that wants to reserve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "availableRestaurant",
                        "in": "formData",
                        "description": "The available restaurant ID for reserving at",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid reserve attributes"
                    },
                    "403": {
                        "description": "The reserves already exists"
                    },
                    "201": {
                        "description": "Reserve created correctly",
                        "schema": {
                            "$ref": "#/definitions/Reserve"
                        }
                    }
                }
            }
        },
        "/reserves/{id}": {
            "get": {
                "tags": [
                    "reserves"
                ],
                "summary": "Find a reserve by the id",
                "description": "",
                "operationId": "getReservesById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of reserve that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Reserve"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Reserve not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "reserves"
                ],
                "summary": "Updates a reserve",
                "description": "",
                "operationId": "updateReserves",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of reserves that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "client",
                        "in": "formData",
                        "description": "ID of the new client for this reserve",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "availableRestaurant",
                        "in": "formData",
                        "description": "ID of the new available restaurant for this reserve",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid reserve data"
                    },
                    "403": {
                        "description": "Reserve already exists"
                    },
                    "404": {
                        "description": "Reserve not found"
                    },
                    "200": {
                        "description": "Reserve updated correctly",
                        "schema": {
                            "$ref": "#/definitions/Reserve"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "reserves"
                ],
                "summary": "Deletes a reserve",
                "description": "",
                "operationId": "deleteReserves",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the reserve to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Reserve deleted"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }

    },
   "definitions": {
        "Restaurant": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Client": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AvailableRestaurant": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "restaurant": {
                    "$ref": "#/definitions/Restaurant"
                },
                "reserveList": {
                    "$ref": "#/definitions/ReserveList"
                }
            }
        },
       "ReserveList": {
           "properties": {
               "id": {
                   "type": "integer",
                   "format": "int32"
               },
               "date": {
                   "type": "string",
                   "format": "date"
               },
               "availableRestaurants": {
                   "type": "array",
                   "items": {
                       "type": "int32"
                   }
               }
           }
       },
       "Reserve": {
           "properties": {
               "id": {
                   "type": "integer",
                   "format": "int32"
               },
               "client": {
                   "$ref": "#/definitions/Client"
               },
               "availableRestaurant": {
                   "$ref": "#/definitions/AvailableRestaurant"
               }
           }
       }
    }
}